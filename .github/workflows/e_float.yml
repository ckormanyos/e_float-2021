##############################################################################
#  Copyright Christopher Kormanyos 2021 - 2022.
#  Distributed under the Boost Software License,
#  Version 1.0. (See accompanying file LICENSE_1_0.txt
#  or copy at http://www.boost.org/LICENSE_1_0.txt)

name: e_float
on:
  push:
    branches:
      - '**'
  pull_request:
jobs:
  msvc-release:
    runs-on: windows-2019
    strategy:
      fail-fast: false
      matrix:
        mptype: [ efx, gmp, mpfr ]
    steps:
      - uses: actions/checkout@v1
      - uses: ilammy/msvc-dev-cmd@v1
      - name: msvc-release-efx-boost-test
        shell: cmd
        working-directory: ./libs/e_float/build/
        run: |
          MSBuild -m e_float.sln -p:Configuration=release-${{ matrix.mptype }} -p:Platform=x64 /t:Rebuild
          dir %cd%\x64-release-${{ matrix.mptype }}\e_float.exe
          %cd%\x64-release-${{ matrix.mptype }}\e_float.exe
  msvc-release-boost-test:
    runs-on: windows-2019
    strategy:
      fail-fast: false
      matrix:
        mptype: [ efx, gmp ]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: '0'
      - name: clone-submods-bootstrap-headers-boost-develop
        run: |
          git clone -b develop --depth 1 https://github.com/boostorg/boost.git ../boost-root
          cd ../boost-root
          git submodule update --init tools
          git submodule update --init libs/config
          git submodule update --init libs/math
          git submodule update --init libs/multiprecision
          ./bootstrap.bat
          ./b2 headers
      - uses: actions/checkout@v1
      - uses: ilammy/msvc-dev-cmd@v1
      - name: msvc-release-boost-test
        shell: cmd
        working-directory: ./libs/e_float/build/
        run: |
          set INCLUDE=%cd%\..\..\..\libs\math\include;%cd%\..\..\..\libs\e_float\src;%cd%\..\..\..\..\boost-root;%INCLUDE%
          MSBuild -m e_float.sln -p:useenv=true -p:Configuration=release-${{ matrix.mptype }}-boost-test -p:Platform=x64 /t:Rebuild
          dir %cd%\x64-release-${{ matrix.mptype }}-boost-test\e_float_boost_test.exe
          %cd%\x64-release-${{ matrix.mptype }}-boost-test\e_float_boost_test.exe
  gcc-mingw-winhost-efx-pi:
    runs-on: windows-2019
    strategy:
      fail-fast: false
      matrix:
        standard: [ c++11, c++14, c++17, c++2a ]
        compiler: [ g++ ]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: '0'
      - name: gcc-mingw-winhost-efx-pi
        shell: cmd
        working-directory: ./libs/e_float/build/
        run: |
          echo compile ./e_float.exe
          ${{ matrix.compiler }} -v
          ${{ matrix.compiler }} -finline-functions -finline-limit=32 -march=native -mtune=native -O3 -Wall -Wextra -Wpedantic -Wconversion -Wsign-conversion -std=${{ matrix.standard }} -DE_FLOAT_TYPE_EFX -DE_FLOAT_TEST_PI_ALGOS_TESTS -I../../../libs/e_float/src @GCC_FilesPi.txt ../src/e_float/efx/e_float_efx.cpp -o e_float.exe
          dir %cd%\e_float.exe
          %cd%\e_float.exe
  gcc-mingw-winhost-efx-tests:
    runs-on: windows-2019
    strategy:
      fail-fast: false
      matrix:
        standard: [ c++11, c++14, c++17, c++2a ]
        compiler: [ g++ ]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: '0'
      - name: gcc-mingw-winhost-efx-tests
        shell: cmd
        working-directory: ./libs/e_float/build/
        run: |
          echo compile ./e_float.exe
          ${{ matrix.compiler }} -v
          ${{ matrix.compiler }} -finline-functions -finline-limit=32 -march=native -mtune=native -O3 -Wall -Wextra -Wpedantic -Wconversion -Wsign-conversion -std=${{ matrix.standard }} -DE_FLOAT_TYPE_EFX -DE_FLOAT_TEST_REAL_IMAG_TESTS -I../../../libs/e_float/src @GCC_FilesTest.txt ../src/e_float/efx/e_float_efx.cpp -o e_float.exe
          dir %cd%\e_float.exe
          %cd%\e_float.exe
  gcc-clang-native-efx:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: false
      matrix:
        suite: [ E_FLOAT_TEST_REAL_IMAG_TESTS, E_FLOAT_TEST_PI_ALGOS_TESTS ]
        standard: [ c++11, c++14, c++17, c++2a ]
        compiler: [ g++, clang++ ]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: '0'
      - name: Install packages
        run: sudo apt install clang
      - name: gcc-clang-native-efx
        run: |
          make MP=efx TYP_TOOLSET=${{ matrix.compiler }} TYP_STD=${{ matrix.standard }} TYP_TEST=${{ matrix.suite }} rebuild
          ls -la ./unix-efx/e_float.exe
          ./unix-efx/e_float.exe
        working-directory: ./libs/e_float/build/
  gcc-clang-10-efx:
    runs-on: ubuntu-20.04
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: false
      matrix:
        suite: [ E_FLOAT_TEST_REAL_IMAG_TESTS, E_FLOAT_TEST_PI_ALGOS_TESTS ]
        standard: [ c++11, c++14, c++17, c++20 ]
        compiler: [ g++-10, clang++-10 ]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: '0'
      - name: Install packages
        run: sudo apt install gcc-10 clang-10
      - name: gcc-clang-10-efx
        run: |
          make MP=efx TYP_TOOLSET=${{ matrix.compiler }} TYP_STD=${{ matrix.standard }} TYP_TEST=${{ matrix.suite }} rebuild
          ls -la ./unix-efx/e_float.exe
          ./unix-efx/e_float.exe
        working-directory: ./libs/e_float/build/
  gcc-12-clang-14-native-efx:
    runs-on: ubuntu-22.04
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: false
      matrix:
        suite: [ E_FLOAT_TEST_REAL_IMAG_TESTS, E_FLOAT_TEST_PI_ALGOS_TESTS ]
        standard: [ c++11, c++14, c++17, c++20, c++2b ]
        compiler: [ g++-12, clang++-14 ]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: '0'
      - name: Install packages
        run: sudo apt install clang
      - name: Install compilers
        run: sudo apt install g++-12 clang-14
      - name: gcc-12-clang-14-native-efx
        run: |
          make MP=efx TYP_TOOLSET=${{ matrix.compiler }} TYP_STD=${{ matrix.standard }} TYP_TEST=${{ matrix.suite }} rebuild
          ls -la ./unix-efx/e_float.exe
          ./unix-efx/e_float.exe
        working-directory: ./libs/e_float/build/
  gcc-clang-native-gmp:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: false
      matrix:
        suite: [ E_FLOAT_TEST_REAL_IMAG_TESTS, E_FLOAT_TEST_PI_ALGOS_TESTS ]
        standard: [ c++11, c++14, c++17, c++2a ]
        compiler: [ g++, clang++ ]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: '0'
      - name: Install packages
        run: sudo apt install libgmp-dev
      - name: gcc-clang-native-gmp
        run: |
          make MP=gmp TYP_TOOLSET=${{ matrix.compiler }} TYP_STD=${{ matrix.standard }} TYP_TEST=${{ matrix.suite }} rebuild
          ls -la ./unix-gmp/e_float.exe
          ./unix-gmp/e_float.exe
        working-directory: ./libs/e_float/build/
  gcc-clang-10-gmp:
    runs-on: ubuntu-20.04
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: false
      matrix:
        suite: [ E_FLOAT_TEST_REAL_IMAG_TESTS, E_FLOAT_TEST_PI_ALGOS_TESTS ]
        standard: [ c++11, c++14, c++17, c++20 ]
        compiler: [ g++-10, clang++-10 ]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: '0'
      - name: Install packages
        run: sudo apt install gcc-10 clang-10 libgmp-dev
      - name: gcc-clang-10-gmp
        run: |
          make MP=gmp TYP_TOOLSET=${{ matrix.compiler }} TYP_STD=${{ matrix.standard }} TYP_TEST=${{ matrix.suite }} rebuild
          ls -la ./unix-gmp/e_float.exe
          ./unix-gmp/e_float.exe
        working-directory: ./libs/e_float/build/
  gcc-clang-native-mpfr:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: false
      matrix:
        suite: [ E_FLOAT_TEST_REAL_IMAG_TESTS, E_FLOAT_TEST_PI_ALGOS_TESTS ]
        standard: [ c++11, c++14, c++17, c++2a ]
        compiler: [ g++, clang++ ]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: '0'
      - name: Install packages
        run: sudo apt install libgmp-dev libmpfr-dev
      - name: gcc-clang-native-mpfr
        run: |
          make MP=mpfr TYP_TOOLSET=${{ matrix.compiler }} TYP_STD=${{ matrix.standard }} TYP_TEST=${{ matrix.suite }} rebuild
          ls -la ./unix-mpfr/e_float.exe
          ./unix-mpfr/e_float.exe
        working-directory: ./libs/e_float/build/
  gcc-clang-10-mpfr:
    runs-on: ubuntu-20.04
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: false
      matrix:
        suite: [ E_FLOAT_TEST_REAL_IMAG_TESTS, E_FLOAT_TEST_PI_ALGOS_TESTS ]
        standard: [ c++11, c++14, c++17, c++20 ]
        compiler: [ g++-10, clang++-10 ]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: '0'
      - name: Install packages
        run: sudo apt install gcc-10 clang-10 libgmp-dev libmpfr-dev
      - name: gcc-clang-10-mpfr
        run: |
          make MP=mpfr TYP_TOOLSET=${{ matrix.compiler }} TYP_STD=${{ matrix.standard }} TYP_TEST=${{ matrix.suite }} rebuild
          ls -la ./unix-mpfr/e_float.exe
          ./unix-mpfr/e_float.exe
        working-directory: ./libs/e_float/build/
  apple-gcc-clang-native-efx:
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        suite: [ E_FLOAT_TEST_REAL_IMAG_TESTS, E_FLOAT_TEST_PI_ALGOS_TESTS ]
        standard: [ c++11, c++14, c++17, c++2a ]
        compiler: [ g++, clang++ ]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: '0'
      - name: apple-gcc-clang-native-efx
        run: |
          make MP=efx TYP_TOOLSET=${{ matrix.compiler }} TYP_STD=${{ matrix.standard }} TYP_TEST=${{ matrix.suite }} rebuild
          ls -la ./unix-efx/e_float.exe
          ./unix-efx/e_float.exe
        working-directory: ./libs/e_float/build/
  gcc-clang-native-efx-asan:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: false
      matrix:
        suite: [ E_FLOAT_TEST_REAL_IMAG_TESTS, E_FLOAT_TEST_PI_ALGOS_TESTS ]
        standard: [ c++11, c++14, c++17, c++2a ]
        compiler: [ g++, clang++ ]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: '0'
      - name: gcc-clang-native-efx-asan
        run: |
          make MP=efx TYP_TOOLSET=${{ matrix.compiler }} TYP_STD=${{ matrix.standard }} TYP_TEST=${{ matrix.suite }} TYP_SAN=ADDR rebuild
          ls -la ./unix-efx/e_float.exe
          ./unix-efx/e_float.exe
        working-directory: ./libs/e_float/build/
  gcc-clang-native-efx-boost:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        compiler: [ g++, clang++ ]
        standard: [ c++14, c++17, c++2a ]
        suite: [ E_FLOAT_TEST_REAL_IMAG_TESTS ]
        mpdef: [ E_FLOAT_TYPE_EFX ]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: '0'
      - name: clone-submods-bootstrap-headers-boost-develop
        run: |
          git clone -b develop --depth 1 https://github.com/boostorg/boost.git ../boost-root
          cd ../boost-root
          git submodule update --init tools
          git submodule update --init libs/config
          git submodule update --init libs/math
          git submodule update --init libs/multiprecision
          ./bootstrap.sh
          ./b2 headers
      - name: gcc-clang-native-efx-boost
        run: |
          echo compile and link to e_float_boost_test.exe
          ${{ matrix.compiler }} -Wall -Wextra -m64 -O3 -std=${{ matrix.standard }} -D${{ matrix.mpdef }} -D${{ matrix.suite }} -I../../../libs/e_float/src -I../../../libs/math/include -I../../../../boost-root ../src/e_float/efx/e_float_efx.cpp ../src/e_float/e_float.cpp ../src/e_float/e_float_base.cpp ../src/functions/constants/constants.cpp ../src/functions/elementary/elementary_complex.cpp ../src/functions/elementary/elementary_hyper_g.cpp ../src/functions/elementary/elementary_math.cpp ../src/functions/elementary/elementary_trans.cpp ../src/functions/elementary/elementary_trig.cpp ../test_boost/test_boost.cpp ../test_boost/test_boost_real_concept.cpp ../test_boost/test_boost_sf.cpp -o e_float_boost_test.exe
          echo ls -la e_float_boost_test.exe
          ls -la e_float_boost_test.exe
          echo run e_float_boost_test.exe
          ./e_float_boost_test.exe
        working-directory: ./libs/e_float/build
  apple-gcc-clang-native-efx-boost:
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        compiler: [ g++, clang++ ]
        standard: [ c++14, c++17, c++2a ]
        suite: [ E_FLOAT_TEST_REAL_IMAG_TESTS ]
        mpdef: [ E_FLOAT_TYPE_EFX ]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: '0'
      - name: clone-submods-bootstrap-headers-boost-develop
        run: |
          git clone -b develop --depth 1 https://github.com/boostorg/boost.git ../boost-root
          cd ../boost-root
          git submodule update --init tools
          git submodule update --init libs/config
          git submodule update --init libs/math
          git submodule update --init libs/multiprecision
          ./bootstrap.sh
          ./b2 headers
      - name: apple-gcc-clang-native-efx-boost
        run: |
          echo compile and link to e_float_boost_test.exe
          ${{ matrix.compiler }} -Wall -Wextra -m64 -O3 -std=${{ matrix.standard }} -D${{ matrix.mpdef }} -D${{ matrix.suite }} -I../../../libs/e_float/src -I../../../libs/math/include -I../../../../boost-root ../src/e_float/efx/e_float_efx.cpp ../src/e_float/e_float.cpp ../src/e_float/e_float_base.cpp ../src/functions/constants/constants.cpp ../src/functions/elementary/elementary_complex.cpp ../src/functions/elementary/elementary_hyper_g.cpp ../src/functions/elementary/elementary_math.cpp ../src/functions/elementary/elementary_trans.cpp ../src/functions/elementary/elementary_trig.cpp ../test_boost/test_boost.cpp ../test_boost/test_boost_real_concept.cpp ../test_boost/test_boost_sf.cpp -o e_float_boost_test.exe
          echo ls -la e_float_boost_test.exe
          ls -la e_float_boost_test.exe
          echo run e_float_boost_test.exe
          ./e_float_boost_test.exe
        working-directory: ./libs/e_float/build
  gcc-native-lib:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: false
      matrix:
        mptype: [ efx, gmp, mpfr ]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: '0'
      - name: Install packages
        run: sudo apt install libgmp-dev libmpfr-dev
      - name: gcc-native-lib
        run: |
          make MP=${{ matrix.mptype }} TYP_TOOLSET=g++ TYP_STD=c++11 TYP_TEST=E_FLOAT_TEST_REAL_IMAG_TESTS rebuild
          echo run ./unix-${{ matrix.mptype }}/e_float.exe
          ./unix-${{ matrix.mptype }}/e_float.exe
          echo create archive ./unix-${{ matrix.mptype }}/libe_float.a
          cd ./unix-${{ matrix.mptype }}/obj
          ar cr ../libe_float.a e_float_${{ matrix.mptype }}.o e_float.o e_float_base.o constants.o elementary_complex.o elementary_hyper_g.o elementary_math.o elementary_trans.o elementary_trig.o
          cd ../../
          ls -la ./unix-${{ matrix.mptype }}/e_float.exe ./unix-${{ matrix.mptype }}/libe_float.a
        working-directory: ./libs/e_float/build
